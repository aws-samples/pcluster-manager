---
AWSTemplateFormatVersion: '2010-09-09'

Description: >-
  This template creates a VPC architecture designed for use with ParallelCluster. A public subnet with a managed NAT gateway is deployed
  into a single AZ, and a single private subnet is also created.

Parameters:
  EnvironmentName:
    Description: "Used to qualify resource names (max 20 characters)"
    Type: String
    AllowedPattern: ^[a-zA-Z0-9-_]{1,20}$
    Default: test

  PrivateSubnetAvailabilityZone:
    Description: "Availability zone where private subnet will be created"
    Type: AWS::EC2::AvailabilityZone::Name

  PrivateSubnetCidr:
    Description: "Private subnet IP range (CIDR notation)"
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.8.0/21

  PublicSubnetAvailabilityZone:
    Description: "Availability zone where public subnet will be created"
    Type: AWS::EC2::AvailabilityZone::Name

  PublicSubnetCidr:
    Description: "Private subnet IP range (CIDR notation)"
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/26

  VpcCidr:
    Description: "CIDR Block for VPC"
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16

Resources:
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateSubnetRouteTable

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicSubnetRouteTable

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-igw
        - Key: StackName
          Value: !Ref AWS::StackName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  PrivateSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-rtb
        - Key: StackName
          Value: !Ref AWS::StackName

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref PrivateSubnetAvailabilityZone
      CidrBlock: !Ref PrivateSubnetCidr
      MapPublicIpOnLaunch: false
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-subnet
        - Key: StackName
          Value: !Ref AWS::StackName

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnetRouteTable
      SubnetId: !Ref PrivateSubnet

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref PublicSubnetAvailabilityZone
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-subnet
        - Key: StackName
          Value: !Ref AWS::StackName

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      SubnetId: !Ref PublicSubnet

  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-rtb
        - Key: StackName
          Value: !Ref AWS::StackName

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEip.AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-natgw
        - Key: StackName
          Value: !Ref AWS::StackName

  NatGatewayEip:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-ngw-eip
        - Key: StackName
          Value: !Ref AWS::StackName

  S3VpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: '*'
            Effect: Allow
            Resource: '*'
            Principal: '*'
      RouteTableIds:
        - !Ref PrivateSubnetRouteTable
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcId: !Ref Vpc

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-vpc
        - Key: StackName
          Value: !Ref AWS::StackName

  VpcFlowLogsRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Rights to Publish VPC Flow Logs to CloudWatch Logs
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - vpc-flow-logs.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CloudWatchLogGroup
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogs
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: !GetAtt VpcFlowLogsLogGroup.Arn

  VpcFlowLogsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30

  VpcFlowLogsToCloudWatch:
    Type: AWS::EC2::FlowLog
    Properties:
      LogDestinationType: cloud-watch-logs
      LogGroupName: !Ref VpcFlowLogsLogGroup
      DeliverLogsPermissionArn: !GetAtt VpcFlowLogsRole.Arn
      MaxAggregationInterval: 600
      ResourceId: !Ref Vpc
      ResourceType: VPC
      TrafficType: ALL
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-vpc-flowlogs-cw
        - Key: StackName
          Value: !Ref AWS::StackName

Outputs:
  NatEip:
    Description: NAT gateway IP address
    Value: !Ref NatGatewayEip
    Export:
      Name: !Sub ${AWS::StackName}-NatEip

  NatGatewayId:
    Description: NAT gateway ID
    Value: !Ref NatGateway
    Export:
      Name: !Sub ${AWS::StackName}-NatGateway

  PrivateRouteTable:
    Description: Private subnet route table
    Value: !Ref PrivateSubnetRouteTable
    Export:
      Name: !Sub ${AWS::StackName}-PrivateRouteTable

  PrivateSubnetCidr:
    Description: Private subnet CIDR
    Value: !Ref PrivateSubnetCidr
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnetCidr

  PrivateSubnetId:
    Description: Private subnet
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet

  PublicRouteTable:
    Description: Public subnet route table
    Value: !Ref PublicSubnetRouteTable
    Export:
      Name: !Sub ${AWS::StackName}-PublicRouteTable

  PublicSubnetCidr:
    Description: Public subnet CIDR
    Value: !Ref PublicSubnetCidr
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnetCidr

  PublicSubnetId:
    Description: Public subnet
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet

  VpcCidr:
    Description: VPC CIDR
    Value: !Ref VpcCidr
    Export:
      Name: !Sub ${AWS::StackName}-VpcCidr

  VpcId:
    Description: VPC ID
    Value: !Ref Vpc
    Export:
      Name: !Sub ${AWS::StackName}-VpcId
